//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/retechretech/dev/workspace/realtime/realtime-channel/src/main/java/com/goodow/realtime/channel/impl/SimpleBus.java
//
//  Created by retechretech.
//

#include "IOSClass.h"
#include "com/goodow/realtime/channel/Bus.h"
#include "com/goodow/realtime/channel/Message.h"
#include "com/goodow/realtime/channel/State.h"
#include "com/goodow/realtime/channel/impl/DefaultMessage.h"
#include "com/goodow/realtime/channel/impl/SimpleBus.h"
#include "com/goodow/realtime/channel/util/IdGenerator.h"
#include "com/goodow/realtime/core/Handler.h"
#include "com/goodow/realtime/core/HandlerRegistration.h"
#include "com/goodow/realtime/core/Platform.h"
#include "com/goodow/realtime/json/Json.h"
#include "com/goodow/realtime/json/JsonArray.h"
#include "com/goodow/realtime/json/JsonObject.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/Void.h"

@implementation ComGoodowRealtimeChannelImplSimpleBus

- (id)init {
  return [self initComGoodowRealtimeChannelImplSimpleBusWithGDJsonObject:nil];
}

- (id)initComGoodowRealtimeChannelImplSimpleBusWithGDJsonObject:(id<GDJsonObject>)options {
  if (self = [super init]) {
    state_ = [GDCStateEnum CONNECTING];
    handlerMap_ = [GDJson createObject];
    replyHandlers_ = [GDJson createObject];
    idGenerator_ = [[ComGoodowRealtimeChannelUtilIdGenerator alloc] init];
    state_ = [GDCStateEnum OPEN];
    forkLocal_ = options != nil && [options has:@"forkLocal"] ? [options getBoolean:@"forkLocal"] : NO;
  }
  return self;
}

- (id)initWithGDJsonObject:(id<GDJsonObject>)options {
  return [self initComGoodowRealtimeChannelImplSimpleBusWithGDJsonObject:options];
}

- (void)close {
  state_ = [GDCStateEnum CLOSING];
  [self deliverMessageWithNSString:[GDCBus LOCAL_ON_CLOSE] withGDCMessage:[[ComGoodowRealtimeChannelImplDefaultMessage alloc] initWithBoolean:NO withGDCBus:nil withNSString:[GDCBus LOCAL_ON_CLOSE] withNSString:nil withId:nil]];
  state_ = [GDCStateEnum CLOSED];
  [self clearHandlers];
}

- (GDCStateEnum *)getReadyState {
  return state_;
}

- (id<GDCBus>)publish:(NSString *)address message:(id)msg {
  [self sendOrPubWithBoolean:NO withNSString:address withId:msg withId:nil];
  return self;
}

- (id<ComGoodowRealtimeCoreHandlerRegistration>)registerHandler:(NSString *)address handler:(id)handler {
  [self doRegisterHandlerWithNSString:address withComGoodowRealtimeCoreHandler:handler];
  return [[ComGoodowRealtimeChannelImplSimpleBus_$1 alloc] initWithComGoodowRealtimeChannelImplSimpleBus:self withNSString:address withComGoodowRealtimeCoreHandler:handler];
}

- (id<GDCBus>)send:(NSString *)address message:(id)msg replyHandler:(id)replyHandler {
  [self sendOrPubWithBoolean:YES withNSString:address withId:msg withId:replyHandler];
  return self;
}

- (void)checkNotNullWithNSString:(NSString *)paramName
                          withId:(id)param {
  if (param == nil) {
    @throw [[JavaLangIllegalArgumentException alloc] initWithNSString:[NSString stringWithFormat:@"Parameter %@ must be specified", paramName]];
  }
}

- (void)clearHandlers {
  (void) [((id<GDJsonObject>) nil_chk(replyHandlers_)) clear];
  (void) [((id<GDJsonObject>) nil_chk(handlerMap_)) clear];
}

- (void)deliverMessageWithNSString:(NSString *)address
                    withGDCMessage:(id<GDCMessage>)message {
  id<GDJsonArray> handlers = [((id<GDJsonObject>) nil_chk(handlerMap_)) getArray:address];
  if (handlers != nil) {
    for (int i = 0, len = [handlers count]; i < len; i++) {
      [self scheduleHandleWithId:message withId:[handlers getWithInt:i]];
    }
  }
  else {
    id handler = [((id<GDJsonObject>) nil_chk(replyHandlers_)) getWithNSString:address];
    if (handler != nil) {
      (void) [replyHandlers_ remove:address];
      [self scheduleHandleWithId:message withId:handler];
    }
  }
}

- (BOOL)doRegisterHandlerWithNSString:(NSString *)address
     withComGoodowRealtimeCoreHandler:(id<ComGoodowRealtimeCoreHandler>)handler {
  [self checkNotNullWithNSString:@"address" withId:address];
  [self checkNotNullWithNSString:@"handler" withId:handler];
  id<GDJsonArray> handlers = [((id<GDJsonObject>) nil_chk(handlerMap_)) getArray:address];
  if (handlers == nil) {
    (void) [handlerMap_ set:address value:[((id<GDJsonArray>) nil_chk([GDJson createArray])) push:handler]];
    return YES;
  }
  else if ([handlers indexOfObject:handler] == -1) {
    (void) [handlers push:handler];
  }
  return NO;
}

- (BOOL)doUnregisterHandlerWithNSString:(NSString *)address
       withComGoodowRealtimeCoreHandler:(id<ComGoodowRealtimeCoreHandler>)handler {
  NSAssert(address != nil, @"address shouldn't be null");
  NSAssert(handler != nil, @"handler shouldn't be null");
  id<GDJsonArray> handlers = [((id<GDJsonObject>) nil_chk(handlerMap_)) getArray:address];
  if (handlers != nil) {
    int idx = [handlers indexOfObject:handler];
    if (idx != -1) {
      (void) [handlers remove:idx];
    }
    if ([handlers count] == 0) {
      (void) [handlerMap_ remove:address];
      return YES;
    }
  }
  return NO;
}

- (BOOL)isLocalForkWithNSString:(NSString *)address {
  NSAssert(address != nil, @"address shouldn't be null");
  return forkLocal_ && [((NSString *) nil_chk(address)) hasPrefix:[GDCBus LOCAL]];
}

- (NSString *)makeUUID {
  return [((ComGoodowRealtimeChannelUtilIdGenerator *) nil_chk(idGenerator_)) nextWithInt:36];
}

- (void)nativeHandleWithId:(id)message
                    withId:(id)handler {
  [((id<ComGoodowRealtimeCoreHandler>) check_protocol_cast(handler, @protocol(ComGoodowRealtimeCoreHandler))) handleWithId:message];
}

- (void)scheduleHandleWithId:(id)message
                      withId:(id)handler {
  [ComGoodowRealtimeCorePlatform scheduleDeferredWithComGoodowRealtimeCoreHandler:[[ComGoodowRealtimeChannelImplSimpleBus_$2 alloc] initWithComGoodowRealtimeChannelImplSimpleBus:self withId:message withId:handler]];
}

- (void)sendOrPubWithBoolean:(BOOL)send
                withNSString:(NSString *)address
                      withId:(id)msg
                      withId:(id)replyHandler {
  [self checkNotNullWithNSString:@"address" withId:address];
  NSString *replyAddress = nil;
  if (replyHandler != nil) {
    replyAddress = [self makeUUID];
    (void) [((id<GDJsonObject>) nil_chk(replyHandlers_)) set:replyAddress value:replyHandler];
  }
  if ([self isLocalForkWithNSString:address]) {
    address = [((NSString *) nil_chk(address)) substring:[((NSString *) nil_chk([GDCBus LOCAL])) length]];
    if (replyAddress != nil) {
      replyAddress = [NSString stringWithFormat:@"%@%@", [GDCBus LOCAL], replyAddress];
    }
  }
  [self deliverMessageWithNSString:address withGDCMessage:[[ComGoodowRealtimeChannelImplDefaultMessage alloc] initWithBoolean:send withGDCBus:self withNSString:address withNSString:replyAddress withId:msg]];
}

- (void)copyAllFieldsTo:(ComGoodowRealtimeChannelImplSimpleBus *)other {
  [super copyAllFieldsTo:other];
  other->forkLocal_ = forkLocal_;
  other->handlerMap_ = handlerMap_;
  other->idGenerator_ = idGenerator_;
  other->replyHandlers_ = replyHandlers_;
  other->state_ = state_;
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "init", "SimpleBus", NULL, 0x1, NULL },
    { "initWithGDJsonObject:", "SimpleBus", NULL, 0x1, NULL },
    { "close", NULL, "V", 0x1, NULL },
    { "getReadyState", NULL, "Lcom.goodow.realtime.channel.State;", 0x1, NULL },
    { "publish:message:", "publish", "Lcom.goodow.realtime.channel.Bus;", 0x1, NULL },
    { "registerHandler:handler:", "registerHandler", "Lcom.goodow.realtime.core.HandlerRegistration;", 0x1, NULL },
    { "send:message:replyHandler:", "send", "Lcom.goodow.realtime.channel.Bus;", 0x1, NULL },
    { "checkNotNullWithNSString:withId:", "checkNotNull", "V", 0x4, NULL },
    { "clearHandlers", NULL, "V", 0x4, NULL },
    { "deliverMessageWithNSString:withGDCMessage:", "deliverMessage", "V", 0x4, NULL },
    { "doRegisterHandlerWithNSString:withComGoodowRealtimeCoreHandler:", "doRegisterHandler", "Z", 0x4, NULL },
    { "doUnregisterHandlerWithNSString:withComGoodowRealtimeCoreHandler:", "doUnregisterHandler", "Z", 0x4, NULL },
    { "isLocalForkWithNSString:", "isLocalFork", "Z", 0x4, NULL },
    { "makeUUID", NULL, "Ljava.lang.String;", 0x4, NULL },
    { "nativeHandleWithId:withId:", "nativeHandle", "V", 0x4, NULL },
    { "scheduleHandleWithId:withId:", "scheduleHandle", "V", 0x4, NULL },
    { "sendOrPubWithBoolean:withNSString:withId:withId:", "sendOrPub", "V", 0x4, NULL },
  };
  static J2ObjcFieldInfo fields[] = {
    { "handlerMap_", NULL, 0x14, "Lcom.goodow.realtime.json.JsonObject;" },
    { "replyHandlers_", NULL, 0x14, "Lcom.goodow.realtime.json.JsonObject;" },
    { "idGenerator_", NULL, 0x12, "Lcom.goodow.realtime.channel.util.IdGenerator;" },
    { "forkLocal_", NULL, 0x12, "Z" },
    { "state_", NULL, 0x4, "Lcom.goodow.realtime.channel.State;" },
  };
  static J2ObjcClassInfo _ComGoodowRealtimeChannelImplSimpleBus = { "SimpleBus", "com.goodow.realtime.channel.impl", NULL, 0x1, 17, methods, 5, fields, 0, NULL};
  return &_ComGoodowRealtimeChannelImplSimpleBus;
}

@end
@implementation ComGoodowRealtimeChannelImplSimpleBus_$1

- (void)unregisterHandler {
  [this$0_ doUnregisterHandlerWithNSString:val$address_ withComGoodowRealtimeCoreHandler:val$handler_];
}

- (id)initWithComGoodowRealtimeChannelImplSimpleBus:(ComGoodowRealtimeChannelImplSimpleBus *)outer$
                                       withNSString:(NSString *)capture$0
                   withComGoodowRealtimeCoreHandler:(id<ComGoodowRealtimeCoreHandler>)capture$1 {
  this$0_ = outer$;
  val$address_ = capture$0;
  val$handler_ = capture$1;
  return [super init];
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "unregisterHandler", NULL, "V", 0x1, NULL },
    { "initWithComGoodowRealtimeChannelImplSimpleBus:withNSString:withComGoodowRealtimeCoreHandler:", "init", NULL, 0x0, NULL },
  };
  static J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "Lcom.goodow.realtime.channel.impl.SimpleBus;" },
    { "val$address_", NULL, 0x1012, "Ljava.lang.String;" },
    { "val$handler_", NULL, 0x1012, "Lcom.goodow.realtime.core.Handler;" },
  };
  static J2ObjcClassInfo _ComGoodowRealtimeChannelImplSimpleBus_$1 = { "$1", "com.goodow.realtime.channel.impl", "SimpleBus", 0x8000, 2, methods, 3, fields, 0, NULL};
  return &_ComGoodowRealtimeChannelImplSimpleBus_$1;
}

@end
@implementation ComGoodowRealtimeChannelImplSimpleBus_$2

- (void)handleWithId:(id)ignore {
  [this$0_ nativeHandleWithId:val$message_ withId:val$handler_];
}

- (id)initWithComGoodowRealtimeChannelImplSimpleBus:(ComGoodowRealtimeChannelImplSimpleBus *)outer$
                                             withId:(id)capture$0
                                             withId:(id)capture$1 {
  this$0_ = outer$;
  val$message_ = capture$0;
  val$handler_ = capture$1;
  return [super init];
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "handleWithJavaLangVoid:", "handle", "V", 0x1, NULL },
    { "initWithComGoodowRealtimeChannelImplSimpleBus:withId:withId:", "init", NULL, 0x0, NULL },
  };
  static J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "Lcom.goodow.realtime.channel.impl.SimpleBus;" },
    { "val$message_", NULL, 0x1012, "Ljava.lang.Object;" },
    { "val$handler_", NULL, 0x1012, "Ljava.lang.Object;" },
  };
  static J2ObjcClassInfo _ComGoodowRealtimeChannelImplSimpleBus_$2 = { "$2", "com.goodow.realtime.channel.impl", "SimpleBus", 0x8000, 2, methods, 3, fields, 0, NULL};
  return &_ComGoodowRealtimeChannelImplSimpleBus_$2;
}

@end
