//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/retechretech/dev/workspace/realtime/realtime-channel/src/main/java/com/goodow/realtime/channel/impl/WebSocketBusClient.java
//
//  Created by retechretech.
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "com/goodow/realtime/channel/Bus.h"
#include "com/goodow/realtime/channel/Message.h"
#include "com/goodow/realtime/channel/State.h"
#include "com/goodow/realtime/channel/impl/DefaultMessage.h"
#include "com/goodow/realtime/channel/impl/SimpleBus.h"
#include "com/goodow/realtime/channel/impl/WebSocketBusClient.h"
#include "com/goodow/realtime/core/Handler.h"
#include "com/goodow/realtime/core/HandlerRegistration.h"
#include "com/goodow/realtime/core/Net.h"
#include "com/goodow/realtime/core/Platform.h"
#include "com/goodow/realtime/core/WebSocket.h"
#include "com/goodow/realtime/json/Json.h"
#include "com/goodow/realtime/json/JsonArray.h"
#include "com/goodow/realtime/json/JsonObject.h"
#include "java/lang/IllegalStateException.h"
#include "java/lang/Void.h"
#include "java/util/logging/Logger.h"

@implementation ComGoodowRealtimeChannelImplWebSocketBusClient

static JavaUtilLoggingLogger * ComGoodowRealtimeChannelImplWebSocketBusClient_log_;

+ (JavaUtilLoggingLogger *)log {
  return ComGoodowRealtimeChannelImplWebSocketBusClient_log_;
}

- (id)initWithNSString:(NSString *)url
      withGDJsonObject:(id<GDJsonObject>)options {
  if (self = [super initWithGDJsonObject:options]) {
    pingTimerID_ = 0;
    reconnect__ = YES;
    state_ = [GDCStateEnum CONNECTING];
    self->url_ = url;
    self->options_ = options;
    pingInterval_ = options != nil && [options has:@"vertxbus_ping_interval"] ? (int) [options getNumber:@"vertxbus_ping_interval"] : 5 * 1000;
    webSocketHandler_ = [[ComGoodowRealtimeChannelImplWebSocketBusClient_$1 alloc] initWithComGoodowRealtimeChannelImplWebSocketBusClient:self];
    [self reconnect];
  }
  return self;
}

- (void)close {
  state_ = [GDCStateEnum CLOSING];
  reconnect__ = NO;
  [((id<ComGoodowRealtimeCoreWebSocket>) nil_chk(webSocket_)) close];
  (void) [self registerHandler:[GDCBus LOCAL_ON_CLOSE] handler:[[ComGoodowRealtimeChannelImplWebSocketBusClient_$2 alloc] initWithComGoodowRealtimeChannelImplWebSocketBusClient:self]];
}

- (void)login:(NSString *)username password:(NSString *)password replyHandler:(id)replyHandler {
  id<GDJsonObject> msg = [((id<GDJsonObject>) nil_chk([((id<GDJsonObject>) nil_chk([GDJson createObject])) set:@"username" value:username])) set:@"password" value:password];
  [self sendOrPubWithBoolean:YES withNSString:@"vertx.basicauthmanager.login" withId:msg withId:[[ComGoodowRealtimeChannelImplWebSocketBusClient_$3 alloc] initWithComGoodowRealtimeChannelImplWebSocketBusClient:self withComGoodowRealtimeCoreHandler:replyHandler]];
}

- (void)reconnect {
  if (state_ == [GDCStateEnum OPEN]) {
    return;
  }
  if (webSocket_ != nil) {
    [webSocket_ close];
  }
  state_ = [GDCStateEnum CONNECTING];
  webSocket_ = [((id<ComGoodowRealtimeCoreNet>) nil_chk([ComGoodowRealtimeCorePlatform net])) createWebSocketWithNSString:url_ withGDJsonObject:options_];
  [((id<ComGoodowRealtimeCoreWebSocket>) nil_chk(webSocket_)) setListenWithComGoodowRealtimeCoreWebSocket_WebSocketHandler:webSocketHandler_];
}

- (id<ComGoodowRealtimeCoreHandlerRegistration>)registerHandler:(NSString *)address handler:(id)handler {
  BOOL first = [super doRegisterHandlerWithNSString:address withComGoodowRealtimeCoreHandler:handler];
  if (first) {
    [self sendRegisterWithNSString:address];
  }
  return [[ComGoodowRealtimeChannelImplWebSocketBusClient_$4 alloc] initWithComGoodowRealtimeChannelImplWebSocketBusClient:self withNSString:address withComGoodowRealtimeCoreHandler:handler];
}

- (BOOL)doUnregisterHandlerWithNSString:(NSString *)address
       withComGoodowRealtimeCoreHandler:(id<ComGoodowRealtimeCoreHandler>)handler {
  BOOL last = [super doUnregisterHandlerWithNSString:address withComGoodowRealtimeCoreHandler:handler];
  if (last && ![super isLocalForkWithNSString:address]) {
    id<GDJsonObject> msg = [((id<GDJsonObject>) nil_chk([((id<GDJsonObject>) nil_chk([GDJson createObject])) set:@"type" value:@"unregister"])) set:@"address" value:address];
    [self sendWithNSString:[((id<GDJsonObject>) nil_chk(msg)) toJsonString]];
  }
  return last;
}

- (void)sendOrPubWithBoolean:(BOOL)send
                withNSString:(NSString *)address
                      withId:(id)msg
                      withId:(id)replyHandler {
  [self checkNotNullWithNSString:@"address" withId:address];
  if ([super isLocalForkWithNSString:address]) {
    [super sendOrPubWithBoolean:send withNSString:address withId:msg withId:replyHandler];
    return;
  }
  if (state_ != [GDCStateEnum OPEN]) {
    @throw [[JavaLangIllegalStateException alloc] initWithNSString:@"INVALID_STATE_ERR"];
  }
  id<GDJsonObject> envelope = [((id<GDJsonObject>) nil_chk([GDJson createObject])) set:@"type" value:send ? @"send" : @"publish"];
  (void) [((id<GDJsonObject>) nil_chk([((id<GDJsonObject>) nil_chk(envelope)) set:@"address" value:address])) set:@"body" value:msg];
  if (sessionID_ != nil) {
    (void) [envelope set:@"sessionID" value:sessionID_];
  }
  if (replyHandler != nil) {
    NSString *replyAddress = [self makeUUID];
    (void) [envelope set:@"replyAddress" value:replyAddress];
    (void) [((id<GDJsonObject>) nil_chk(replyHandlers_)) set:replyAddress value:replyHandler];
  }
  [self sendWithNSString:[envelope toJsonString]];
}

- (void)sendWithNSString:(NSString *)msg {
  if (state_ == [GDCStateEnum OPEN]) {
    [((id<ComGoodowRealtimeCoreWebSocket>) nil_chk(webSocket_)) sendWithNSString:msg];
  }
  else {
    [((JavaUtilLoggingLogger *) nil_chk(ComGoodowRealtimeChannelImplWebSocketBusClient_log_)) warningWithNSString:[NSString stringWithFormat:@"WebSocket is in %@ state. Cannot send: %@", state_, msg]];
  }
}

- (void)sendPing {
  [self sendWithNSString:[((id<GDJsonObject>) nil_chk([((id<GDJsonObject>) nil_chk([GDJson createObject])) set:@"type" value:@"ping"])) toJsonString]];
}

- (void)sendRegisterWithNSString:(NSString *)address {
  NSAssert(address != nil, @"address shouldn't be null");
  if ([super isLocalForkWithNSString:address]) {
    return;
  }
  id<GDJsonObject> msg = [((id<GDJsonObject>) nil_chk([((id<GDJsonObject>) nil_chk([GDJson createObject])) set:@"type" value:@"register"])) set:@"address" value:address];
  [self sendWithNSString:[((id<GDJsonObject>) nil_chk(msg)) toJsonString]];
}

+ (void)initialize {
  if (self == [ComGoodowRealtimeChannelImplWebSocketBusClient class]) {
    ComGoodowRealtimeChannelImplWebSocketBusClient_log_ = [JavaUtilLoggingLogger getLoggerWithNSString:[[IOSClass classWithClass:[ComGoodowRealtimeChannelImplWebSocketBusClient class]] getName]];
  }
}

- (void)copyAllFieldsTo:(ComGoodowRealtimeChannelImplWebSocketBusClient *)other {
  [super copyAllFieldsTo:other];
  other->options_ = options_;
  other->pingInterval_ = pingInterval_;
  other->pingTimerID_ = pingTimerID_;
  other->reconnect__ = reconnect__;
  other->sessionID_ = sessionID_;
  other->url_ = url_;
  other->webSocket_ = webSocket_;
  other->webSocketHandler_ = webSocketHandler_;
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "initWithNSString:withGDJsonObject:", "WebSocketBusClient", NULL, 0x1, NULL },
    { "close", NULL, "V", 0x1, NULL },
    { "login:password:replyHandler:", "login", "V", 0x1, NULL },
    { "reconnect", NULL, "V", 0x1, NULL },
    { "registerHandler:handler:", "registerHandler", "Lcom.goodow.realtime.core.HandlerRegistration;", 0x1, NULL },
    { "doUnregisterHandlerWithNSString:withComGoodowRealtimeCoreHandler:", "doUnregisterHandler", "Z", 0x4, NULL },
    { "sendOrPubWithBoolean:withNSString:withId:withId:", "sendOrPub", "V", 0x4, NULL },
    { "sendWithNSString:", "send", "V", 0x2, NULL },
    { "sendPing", NULL, "V", 0x2, NULL },
    { "sendRegisterWithNSString:", "sendRegister", "V", 0x2, NULL },
  };
  static J2ObjcFieldInfo fields[] = {
    { "log_", NULL, 0x1a, "Ljava.util.logging.Logger;" },
    { "url_", NULL, 0x12, "Ljava.lang.String;" },
    { "options_", NULL, 0x12, "Lcom.goodow.realtime.json.JsonObject;" },
    { "pingInterval_", NULL, 0x12, "I" },
    { "webSocketHandler_", NULL, 0x12, "Lcom.goodow.realtime.core.WebSocket$WebSocketHandler;" },
    { "webSocket_", NULL, 0x2, "Lcom.goodow.realtime.core.WebSocket;" },
    { "sessionID_", NULL, 0x2, "Ljava.lang.String;" },
    { "pingTimerID_", NULL, 0x2, "I" },
    { "reconnect__", "reconnect", 0x2, "Z" },
  };
  static J2ObjcClassInfo _ComGoodowRealtimeChannelImplWebSocketBusClient = { "WebSocketBusClient", "com.goodow.realtime.channel.impl", NULL, 0x1, 10, methods, 9, fields, 0, NULL};
  return &_ComGoodowRealtimeChannelImplWebSocketBusClient;
}

@end
@implementation ComGoodowRealtimeChannelImplWebSocketBusClient_$1

- (void)onCloseWithGDJsonObject:(id<GDJsonObject>)reason {
  this$0_->state_ = [GDCStateEnum CLOSED];
  NSAssert(this$0_->pingTimerID_ > 0, @"pingTimerID should > 0");
  [ComGoodowRealtimeCorePlatform cancelTimerWithInt:this$0_->pingTimerID_];
  [this$0_ deliverMessageWithNSString:[GDCBus LOCAL_ON_CLOSE] withGDCMessage:[[ComGoodowRealtimeChannelImplDefaultMessage alloc] initWithBoolean:NO withGDCBus:nil withNSString:[GDCBus LOCAL_ON_CLOSE] withNSString:nil withId:reason]];
  if (this$0_->reconnect__) {
    [this$0_ reconnect];
  }
}

- (void)onErrorWithNSString:(NSString *)error {
  this$0_->reconnect__ = NO;
  [this$0_ deliverMessageWithNSString:[GDCBus LOCAL_ON_ERROR] withGDCMessage:[[ComGoodowRealtimeChannelImplDefaultMessage alloc] initWithBoolean:NO withGDCBus:nil withNSString:[GDCBus LOCAL_ON_ERROR] withNSString:nil withId:[((id<GDJsonObject>) nil_chk([GDJson createObject])) set:@"message" value:error]]];
}

- (void)onMessageWithNSString:(NSString *)msg {
  id<GDJsonObject> json = [GDJson parseWithNSString:msg];
  NSString *address = [((id<GDJsonObject>) nil_chk(json)) getString:@"address"];
  ComGoodowRealtimeChannelImplDefaultMessage *message = [[ComGoodowRealtimeChannelImplDefaultMessage alloc] initWithBoolean:NO withGDCBus:this$0_ withNSString:address withNSString:[json getString:@"replyAddress"] withId:[json getWithNSString:@"body"]];
  [this$0_ deliverMessageWithNSString:address withGDCMessage:message];
}

- (void)onOpen {
  this$0_->state_ = [GDCStateEnum OPEN];
  this$0_->reconnect__ = YES;
  [this$0_ sendPing];
  this$0_->pingTimerID_ = [ComGoodowRealtimeCorePlatform setPeriodicWithInt:this$0_->pingInterval_ withComGoodowRealtimeCoreHandler:[[ComGoodowRealtimeChannelImplWebSocketBusClient_$1_$1 alloc] initWithComGoodowRealtimeChannelImplWebSocketBusClient_$1:self]];
  IOSObjectArray *keys = [((id<GDJsonObject>) nil_chk(this$0_->handlerMap_)) keys];
  {
    IOSObjectArray *a__ = keys;
    id const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    id const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      NSString *key = (*b__++);
      NSAssert([((id<GDJsonArray>) nil_chk([this$0_->handlerMap_ getArray:key])) count] > 0, [[NSString stringWithFormat:@"Handlers registried on %@ shouldn't be empty" J2OBJC_COMMA() key] description]);
      [this$0_ sendRegisterWithNSString:key];
    }
  }
  [this$0_ deliverMessageWithNSString:[GDCBus LOCAL_ON_OPEN] withGDCMessage:[[ComGoodowRealtimeChannelImplDefaultMessage alloc] initWithBoolean:NO withGDCBus:nil withNSString:[GDCBus LOCAL_ON_OPEN] withNSString:nil withId:nil]];
}

- (id)initWithComGoodowRealtimeChannelImplWebSocketBusClient:(ComGoodowRealtimeChannelImplWebSocketBusClient *)outer$ {
  this$0_ = outer$;
  return [super init];
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "onCloseWithGDJsonObject:", "onClose", "V", 0x1, NULL },
    { "onErrorWithNSString:", "onError", "V", 0x1, NULL },
    { "onMessageWithNSString:", "onMessage", "V", 0x1, NULL },
    { "onOpen", NULL, "V", 0x1, NULL },
    { "initWithComGoodowRealtimeChannelImplWebSocketBusClient:", "init", NULL, 0x0, NULL },
  };
  static J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "Lcom.goodow.realtime.channel.impl.WebSocketBusClient;" },
  };
  static J2ObjcClassInfo _ComGoodowRealtimeChannelImplWebSocketBusClient_$1 = { "$1", "com.goodow.realtime.channel.impl", "WebSocketBusClient", 0x8000, 5, methods, 1, fields, 0, NULL};
  return &_ComGoodowRealtimeChannelImplWebSocketBusClient_$1;
}

@end
@implementation ComGoodowRealtimeChannelImplWebSocketBusClient_$1_$1

- (void)handleWithId:(id)ignore {
  [this$0_->this$0_ sendPing];
}

- (id)initWithComGoodowRealtimeChannelImplWebSocketBusClient_$1:(ComGoodowRealtimeChannelImplWebSocketBusClient_$1 *)outer$ {
  this$0_ = outer$;
  return [super init];
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "handleWithJavaLangVoid:", "handle", "V", 0x1, NULL },
    { "initWithComGoodowRealtimeChannelImplWebSocketBusClient_$1:", "init", NULL, 0x0, NULL },
  };
  static J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "Lcom.goodow.realtime.channel.impl.WebSocketBusClient$1;" },
  };
  static J2ObjcClassInfo _ComGoodowRealtimeChannelImplWebSocketBusClient_$1_$1 = { "$1", "com.goodow.realtime.channel.impl", "WebSocketBusClient$$1", 0x8000, 2, methods, 1, fields, 0, NULL};
  return &_ComGoodowRealtimeChannelImplWebSocketBusClient_$1_$1;
}

@end
@implementation ComGoodowRealtimeChannelImplWebSocketBusClient_$2

- (void)handleWithId:(id<GDCMessage>)event {
  [this$0_ clearHandlers];
}

- (id)initWithComGoodowRealtimeChannelImplWebSocketBusClient:(ComGoodowRealtimeChannelImplWebSocketBusClient *)outer$ {
  this$0_ = outer$;
  return [super init];
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "handleWithGDCMessage:", "handle", "V", 0x1, NULL },
    { "initWithComGoodowRealtimeChannelImplWebSocketBusClient:", "init", NULL, 0x0, NULL },
  };
  static J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "Lcom.goodow.realtime.channel.impl.WebSocketBusClient;" },
  };
  static J2ObjcClassInfo _ComGoodowRealtimeChannelImplWebSocketBusClient_$2 = { "$2", "com.goodow.realtime.channel.impl", "WebSocketBusClient", 0x8000, 2, methods, 1, fields, 0, NULL};
  return &_ComGoodowRealtimeChannelImplWebSocketBusClient_$2;
}

@end
@implementation ComGoodowRealtimeChannelImplWebSocketBusClient_$3

- (void)handleWithId:(id<GDCMessage>)msg {
  id<GDJsonObject> body = [((id<GDCMessage>) nil_chk(msg)) body];
  if ([@"ok" isEqual:[((id<GDJsonObject>) nil_chk(body)) getString:@"status"]]) {
    this$0_->sessionID_ = [body getString:@"sessionID"];
  }
  if (val$replyHandler_ != nil) {
    [this$0_ scheduleHandleWithId:[body remove:@"sessionID"] withId:val$replyHandler_];
  }
}

- (id)initWithComGoodowRealtimeChannelImplWebSocketBusClient:(ComGoodowRealtimeChannelImplWebSocketBusClient *)outer$
                            withComGoodowRealtimeCoreHandler:(id<ComGoodowRealtimeCoreHandler>)capture$0 {
  this$0_ = outer$;
  val$replyHandler_ = capture$0;
  return [super init];
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "handleWithGDCMessage:", "handle", "V", 0x1, NULL },
    { "initWithComGoodowRealtimeChannelImplWebSocketBusClient:withComGoodowRealtimeCoreHandler:", "init", NULL, 0x0, NULL },
  };
  static J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "Lcom.goodow.realtime.channel.impl.WebSocketBusClient;" },
    { "val$replyHandler_", NULL, 0x1012, "Lcom.goodow.realtime.core.Handler;" },
  };
  static J2ObjcClassInfo _ComGoodowRealtimeChannelImplWebSocketBusClient_$3 = { "$3", "com.goodow.realtime.channel.impl", "WebSocketBusClient", 0x8000, 2, methods, 2, fields, 0, NULL};
  return &_ComGoodowRealtimeChannelImplWebSocketBusClient_$3;
}

@end
@implementation ComGoodowRealtimeChannelImplWebSocketBusClient_$4

- (void)unregisterHandler {
  [this$0_ doUnregisterHandlerWithNSString:val$address_ withComGoodowRealtimeCoreHandler:val$handler_];
}

- (id)initWithComGoodowRealtimeChannelImplWebSocketBusClient:(ComGoodowRealtimeChannelImplWebSocketBusClient *)outer$
                                                withNSString:(NSString *)capture$0
                            withComGoodowRealtimeCoreHandler:(id<ComGoodowRealtimeCoreHandler>)capture$1 {
  this$0_ = outer$;
  val$address_ = capture$0;
  val$handler_ = capture$1;
  return [super init];
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "unregisterHandler", NULL, "V", 0x1, NULL },
    { "initWithComGoodowRealtimeChannelImplWebSocketBusClient:withNSString:withComGoodowRealtimeCoreHandler:", "init", NULL, 0x0, NULL },
  };
  static J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "Lcom.goodow.realtime.channel.impl.WebSocketBusClient;" },
    { "val$address_", NULL, 0x1012, "Ljava.lang.String;" },
    { "val$handler_", NULL, 0x1012, "Lcom.goodow.realtime.core.Handler;" },
  };
  static J2ObjcClassInfo _ComGoodowRealtimeChannelImplWebSocketBusClient_$4 = { "$4", "com.goodow.realtime.channel.impl", "WebSocketBusClient", 0x8000, 2, methods, 3, fields, 0, NULL};
  return &_ComGoodowRealtimeChannelImplWebSocketBusClient_$4;
}

@end
